{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-data.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/food-detail/food-detail.component.css","webpack:///./src/app/food-detail/food-detail.component.html","webpack:///./src/app/food-detail/food-detail.component.ts","webpack:///./src/app/food-item.ts","webpack:///./src/app/food-list/food-list.component.css","webpack:///./src/app/food-list/food-list.component.html","webpack:///./src/app/food-list/food-list.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Headers, Http, Response } from '@angular/http';\nimport { FoodItem } from './food-item';\n@Injectable()\nexport class AppDataService {\n\n  private apiUrl = '/api/food';\n  constructor(private http: Http) { }\n\n  public getFoodItems(): Promise<void | FoodItem[]> {\n\treturn this.http.get(this.apiUrl)\n\t.toPromise()\n\t.then(response => response.json() as FoodItem[])\n\t.catch(this.handleError);\n  }\n\t\t\t\t\t\t\t\t \n  public createFoodItem(newFoodItem: FoodItem): Promise<void | FoodItem> {\n\treturn this.http.post(this.apiUrl, newFoodItem)\n\t.toPromise()\n\t.then(response => response.json() as FoodItem)\n\t.catch(this.handleError);\n  }\n\n  public deleteFoodItem(delFoodItemId: String): Promise<void | String> {\n\treturn this.http.delete(this.apiUrl + '/' + delFoodItemId)\n\t.toPromise()\n\t.then(response => response.json() as String)\n\t.catch(this.handleError);\n  }\n\n  public updateFoodItem(putFoodItem: FoodItem): Promise<void | FoodItem> {\n\tvar putUrl = this.apiUrl + '/' + putFoodItem._id;\n\treturn this.http.put(putUrl, putFoodItem)\n\t.toPromise()\n\t.then(response => response.json() as FoodItem)\n\t.catch(this.handleError);\n  }\n  \n  private handleError(error: any) {\n\t  let errMsg = (error.message) ? error.message :\n\t  error.status ? `${error.status} - ${error.statusText}` : 'Server Error';\n\t  console.error(errMsg);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-food-list></app-food-list>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyFridge';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { FoodListComponent } from './food-list/food-list.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { FoodDetailComponent } from './food-detail/food-detail.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FoodListComponent,\n    FoodDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n\tHttpModule,\n\tFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb2QtZGV0YWlsL2Zvb2QtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div *ngIf=\\\"foodItem\\\" class=\\\"row\\\">\\n\\t<div class=\\\"col-md-12\\\">\\n\\t\\t<h2 *ngIf=\\\"foodItem._id\\\">Food Item Details</h2>\\n\\t\\t<h2 *ngIf=\\\"!foodItem._id\\\">New Food Item</h2>\\n\\t</div>\\n</div>\\n<div *ngIf=\\\"foodItem\\\" class=\\\"row\\\">\\n\\t<form class=\\\"col-md-12\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"name\\\">Name</label>\\n\\t\\t\\t<input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"foodItem.name\\\" placeholder=\\\"Name\\\" required #name=\\\"ngModel\\\" />\\n\\t\\t\\t<div *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t  <div *ngIf=\\\"name.errors.required\\\">\\n\\t\\t\\t\\tName is required.\\n\\t\\t\\t  </div>\\n\\t\\t\\t</div>\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"item-date\\\">Date</label>\\n\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"item-date\\\" [(ngModel)]=\\\"foodItem.date\\\" placeholder=\\\"Date\\\" required #date=\\\"ngModel\\\"/>\\n\\t\\t\\t<div *ngIf=\\\"date.invalid && (date.dirty || date.touched)\\\" class=\\\"alert alert-danger\\\">\\n\\t\\t\\t  <div *ngIf=\\\"date.errors.required\\\">\\n\\t\\t\\t\\tDate is required.\\n\\t\\t\\t  </div>\\n\\t\\t\\t</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"item-expiry\\\">Expiry Date</label>\\n\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"text\\\"  name=\\\"item-expiry\\\" [(ngModel)]=\\\"foodItem.expiry\\\" placeholder=\\\"Expiry Date\\\"/>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"item-left_overs\\\">Left Overs?</label>\\n\\t\\t<select class=\\\"form-control\\\" name=\\\"item-left_overs\\\" [(ngModel)]=\\\"foodItem.left_overs\\\" >\\n\\t\\t\\t<option value=\\\"true\\\">Yes</option>\\n\\t\\t\\t<option value=\\\"false\\\">No</option>\\n\\t\\t</select>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"item-quantity\\\">Quantity</label>\\n\\t\\t\\t<input class=\\\"form-control\\\" type=\\\"number\\\" min=\\\"1\\\" name=\\\"item-quantity\\\" [(ngModel)]=\\\"foodItem.quantity\\\" placeholder=\\\"Quantity\\\"/>\\n    </div>\\n\\t\\t<button class=\\\"btn btn-primary\\\" *ngIf=\\\"!foodItem._id\\\" (click)=\\\"createFoodItem(foodItem)\\\">Create</button>\\n\\t\\t<button class=\\\"btn btn-info\\\" *ngIf=\\\"foodItem._id\\\" (click)=\\\"updateFoodItem(foodItem)\\\">Update</button>\\n\\t\\t<button class=\\\"btn btn-danger\\\" *ngIf=\\\"foodItem._id\\\" (click)=\\\"deleteFoodItem(foodItem._id)\\\">Delete</button>\\n\\t</form>\\n</div>\"","import { Component, Input } from '@angular/core';\nimport { FoodItem } from '../food-item';\nimport { AppDataService } from '../app-data.service';\n\n@Component({\n  selector: 'app-food-detail',\n  templateUrl: './food-detail.component.html',\n  styleUrls: ['./food-detail.component.css']\n})\nexport class FoodDetailComponent {\n\n  @Input()\n  foodItem: FoodItem;\n\t\n  @Input()\n  createHandler: Function;\n  \n  @Input()\n  updateHandler: Function;\n  \n  @Input()\n  deleteHandler: Function;\n\n  constructor(private dataService: AppDataService) { }\n\t\n  createFoodItem(foodItem: FoodItem) {\n\t  this.dataService.createFoodItem(foodItem)\n\t  \t.then((newFoodItem: FoodItem) => {\n\t\t  this.createHandler(newFoodItem);\n\t  });\n  }\n  \n  updateFoodItem(foodItem: FoodItem): void {\n\t  this.dataService.updateFoodItem(foodItem)\n\t  \t.then((updatedFoodItem: FoodItem) => {\n\t\t  this.updateHandler(updatedFoodItem);\n\t  });\n  }\n  \n  deleteFoodItem(foodItemId: String): void {\n\t  this.dataService.deleteFoodItem(foodItemId)\n\t  \t.then((delFoodItemId: String) => {\n\t\t  this.deleteHandler(delFoodItemId);\n\t  });\n  }\n  \n}\n","export class FoodItem {\n  _id?: string;\n  name: string;\n  date: string;\n  expiry: string;\n  left_overs: boolean;\n  quantity: number;\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb2QtbGlzdC9mb29kLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"row\\\">\\n\\t<div class=\\\"col-md-5 col-md-offset-1\\\">\\n\\t<h2>Food Items</h2>\\n\\t<h4><strong>Click</strong> on each one to get details about it.</h4>\\n\\t<ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\"\\n\\t\\t\\t*ngFor=\\\"let foodItem of foodItems\\\"\\n\\t\\t\\t(click)=\\\"selectFoodItem(foodItem)\\\">\\n\\t\\t\\t{{ foodItem.name }}\\n\\t\\t</li>\\n\\t</ul>\\n\\t<button class=\\\"btn btn-warning\\\" (click)=\\\"createNewFoodItem()\\\">New</button>\\n\\t</div>\\n\\t<div class=\\\"col-md-5 \\\">\\n\\t\\t<app-food-detail\\n\\t\\t\\t[foodItem]=\\\"selectedFoodItem\\\"\\n\\t\\t\\t[createHandler]=\\\"addFoodItem\\\"\\n\\t\\t\\t[updateHandler]=\\\"updateFoodItem\\\"\\n\\t\\t\\t[deleteHandler]=\\\"deleteFoodItem\\\">\\n\\t\\t</app-food-detail>\\n\\t</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FoodItem } from '../food-item';\nimport { AppDataService } from '../app-data.service';\nimport { FoodDetailComponent } from '../food-detail/food-detail.component';\n\n@Component({\n  selector: 'app-food-list',\n  templateUrl: './food-list.component.html',\n  styleUrls: ['./food-list.component.css'],\n  providers: [AppDataService]\n})\nexport class FoodListComponent implements OnInit {\n  foodItems: FoodItem[]\n  selectedFoodItem: FoodItem\n  constructor(private dataService: AppDataService) { }\n\n  ngOnInit() {\n\t  this.dataService\n\t\t.getFoodItems()\n\t\t.then((foodItems:FoodItem[]) => \n\t\t{\n\t\t    if(foodItems != null) {\n\t\t\t\tthis.foodItems = foodItems.map((foodItem) =>\n\t\t\t\t{\n\t\t\t\t\tfoodItem.date = this.dateFormat(foodItem.date);\n\t\t  \t\t\tfoodItem.expiry = this.dateFormat(foodItem.expiry);;\n\t\t\t\t\treturn foodItem;\n\t\t\t\t});\n\t\t\t}\n\t\t});\n  }\n\n  private getIndexOfFoodItem = (foodItemId: String) => {\n\t  return this.foodItems.findIndex((foodItem) => {\n\t\t  return foodItem._id === foodItemId\n\t  });\n  }\n\n  selectFoodItem(foodItem: FoodItem) {\n\t  this.selectedFoodItem = foodItem;\n  }\n\t\n  createNewFoodItem() {\n\t  var foodItem: FoodItem = {\n\t\t  name: '',\n\t\t  date: '',\n\t\t  expiry: '',\n\t\t  left_overs: false,\n\t\t  quantity: 1\n\t  };\n\t  this.selectFoodItem(foodItem);\n  }\n\t\n  deleteFoodItem = (foodItemId: String) => {\n\t  if(confirm(\"Do you really wish to delete?\")) {\n\t\t  \tvar delId = this.getIndexOfFoodItem(foodItemId);\n\t\t\tif(delId !== -1) {\n\t\t\t  if(this.foodItems[delId].quantity > 1) {\n\t\t\t\tthis.foodItems[delId].quantity--;\n\t\t\t\talert(this.foodItems[delId].name + \"'s quantity has been reduced to \" + this.foodItems[delId].quantity);\n\t\t\t  }\n\t\t\t  else {\n\t\t\t\tthis.foodItems.splice(delId, 1);\n\t\t\t\tthis.selectFoodItem(null);\n\t\t\t\talert(\"Deleted successfully!\");\n\t\t\t  }\n\t\t  }\n\t  }\n\t  return this.foodItems;\n  }\n\t\n  addFoodItem = (foodItem: FoodItem) => {\n\t  foodItem.date = this.dateFormat(foodItem.date);\n\t  foodItem.expiry = this.dateFormat(foodItem.expiry);\n\t  this.foodItems.push(foodItem);\n\t  this.selectFoodItem(foodItem);\n\t  alert(\"New Food Item: \" + foodItem.name + \" created\");\n\t  return this.foodItems;\n  }\n\t\n  updateFoodItem = (foodItem: FoodItem) => {\n\t  if(confirm(\"Do you really wish to update?\")) {\n\t\t  var upId = this.getIndexOfFoodItem(foodItem._id);\n\t\t  if(upId !== -1) {\n\t\t\t  foodItem.date = this.dateFormat(foodItem.date);\n\t\t\t  foodItem.expiry = this.dateFormat(foodItem.expiry);\n\t\t\t  this.foodItems[upId] = foodItem;\n\t\t\t  this.selectFoodItem(foodItem);\n\t\t\t  alert(\"Update successful!\");\n\t\t  }\n\t  }\n\t  return this.foodItems;\n  }\n\t\n  dateFormat = (stringDate: string) => {\n\t  var foodDate = new Date(stringDate);\n\t  var dateString = foodDate.getFullYear() + '-' + (foodDate.getMonth()+1) + '-' + foodDate.getUTCDate();\n\t  return dateString;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}